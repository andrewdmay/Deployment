trigger:
  branches:
    include: ['*']
    exclude: [master]

resources:
  containers:
    - container: dotnetsdk
      image: microsoft/dotnet:2.1.503-sdk-stretch

stages:

  - stage: Build
    jobs:
      - job: set_version
        displayName: Set Version
        container: dotnetsdk
        steps:
          - script: |
              export PATH="$PATH:$HOME/.dotnet/tools"
              dotnet tool install -g nbgv
              nbgv cloud -a
          - bash: echo '##vso[task.setvariable variable=nuget_version;isOutput=true]$(NBGV_NuGetPackageVersion)'
            name: set_variable
      - job: cake_build
        displayName: Build and Test
        dependsOn: set_version
        container: dotnetsdk
        steps:
          - script: |
              export PATH="$PATH:$HOME/.dotnet/tools"
              dotnet tool install -g Cake.Tool --version 0.32.0
              dotnet cake --bootstrap
              dotnet cake
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: VSTest
              testResultsFiles: '**/TEST-*.trx'
      - job: docker_build
        displayName: Docker Build
        dependsOn: 
          - set_version
          - cake_build
        variables:
          nuget_version: $[ dependencies.set_version.outputs['set_variable.nuget_version'] ]
        steps:
          - task: Docker@1
            displayName: Docker Build
            inputs:
              command: build
              imageName: deployment:$(nuget_version)
      - job: publish_artifact
        displayName: Publish version number as build artifact
        dependsOn:
          - set_version
          - docker_build
        variables:
          nuget_version: $[ dependencies.set_version.outputs['set_variable.nuget_version'] ]
        steps:
          - bash: echo $(nuget_version) > version.txt
          - task: PublishPipelineArtifact@0
            inputs:
              artifactName: version

  - stage: Development
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - job: deploy_dev
        displayName: Deploy to Development
        container: dotnetsdk
        steps:
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: version
          - bash: VERSION=$(cat version.txt) && echo "Deploying $VERSION"

  - stage: Production
    dependsOn: Development
    jobs:
      - job: deploy_prod
        displayName: Deploy to Production
        container: dotnetsdk
        steps:
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: version
          - bash: VERSION=$(cat version.txt) && echo "Deploying $VERSION"

  - stage: Merge
    dependsOn: Production
    jobs:
      - job: merge_to_master
        displayName: Merge to Master
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: version
          - bash: |
              VERSION=$(cat version.txt)
              git checkout master
              git merge origin/develop
              git tag -a $VERSION -m "Release $VERSION"
              git push origin --follow-tags
